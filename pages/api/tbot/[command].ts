import TelegramBot from "node-telegram-bot-api";
import { NextApiRequest, NextApiResponse } from "next";


export default function tbot(req: NextApiRequest, res: NextApiResponse) {

    const token: string = process.env.T_TOKEN
    const bot: TelegramBot = new TelegramBot(token, { polling: true })

    if (req.query.command === 'start') {
        res.json({ response: '–ë–æ—Ç Grizli –∑–∞–ø—É—â–µ–Ω' })
    }

    /*     bot.setMyCommands([
            {command: '/start', description: '–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ'},
            {command: '/info', description: '–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ'}
        ]) */

    bot.on('message', async (msg) => {
        const text = msg.text
        const chatId = msg.chat.id

        console.log(this.text)

        if (text === '/start') {
            await bot.sendSticker(chatId, 'https://tlgrm.ru/_/stickers/5eb/843/5eb8436f-51c7-315b-abc5-7f45216b5502/3.jpg')
            return bot.sendMessage(chatId, `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å? ${msg.from.first_name} ${msg.from.last_name}!`)
        }

        if (text.toLowerCase().trim() === '/off')
            return bot.sendMessage(chatId, `–Ø –≤—ã–∫–ª—é—á–∞—é—Å—å, –ø–æ–∫–∞!`)

        if (text === '/chatid')
            return bot.sendMessage(chatId, `chatId: ${chatId}`)

        return bot.sendMessage(chatId, `–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏ –º–Ω–µ üì¢: ${text}`)

    });

}